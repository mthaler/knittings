plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdkVersion 31

    defaultConfig {
        applicationId "com.mthaler.knittings"
        minSdkVersion 16
        targetSdkVersion 31
        versionCode 55
        versionName "0.9.33"

        Properties localProperties = getLocalProperties()
        String dropboxKey = localProperties['DROPBOX_KEY']
        buildConfigField "String", "DROPBOX_KEY", "\"${dropboxKey}\""
        manifestPlaceholders = [dropboxKey: dropboxKey]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        multiDexEnabled true
    }
    buildFeatures {
        viewBinding true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        customDebuggableBuildType {
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    lintOptions {
        abortOnError false
    }
    testOptions.unitTests {
        includeAndroidResources = true
    }
}

dependencies {
    implementation "androidx.core:core-ktx:1.7.0"
    implementation 'androidx.appcompat:appcompat:1.4.1'

    def fragment_version = "1.4.1"
    def lifecycleVersion = '2.2.0'

    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    implementation 'com.google.android.material:material:1.5.0'

    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.2.0"

    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.dropbox.core:dropbox-core-sdk:4.0.1'
    implementation 'ch.temparus.colorpicker:library:1.2.0'
    implementation 'id.zelory:compressor:3.0.1'
    implementation 'androidx.exifinterface:exifinterface:1.3.3'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'com.github.bumptech.glide:glide:4.12.0'

    def work_version = "2.7.1"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    def nav_version = "2.4.1"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    testImplementation 'junit:junit:4.13.2'

    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    
    // To use the JUnit Extension APIs
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
     // Kotlin extensions for androidx.test.ext.junit
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.3"

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
     // To use the androidx.test.core APIs
    androidTestImplementation "androidx.test:core:1.4.0"
    // Kotlin extensions for androidx.test.core
    androidTestImplementation "androidx.test:core-ktx:1.4.0"

    androidTestImplementation "androidx.work:work-testing:$work_version"

    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"
}

def getLocalProperties() {
    Properties props = new Properties()
    if (file('../local.properties').exists()) {
        props.load(new FileInputStream(file('../local.properties')))
    }
    return props
}